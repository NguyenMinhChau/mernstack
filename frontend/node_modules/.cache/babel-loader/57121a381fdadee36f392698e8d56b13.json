{"ast":null,"code":"import { actions } from '../exportStore';\nexport const initialState = {\n  user: null,\n  posts: []\n};\nexport const getCurrentUser = payload => {\n  return {\n    type: actions.GET_CURRENT_USER,\n    payload\n  };\n};\nexport const getAllPost = payload => {\n  return {\n    type: actions.GET_ALL_POST,\n    payload\n  };\n};\nexport const createOnePost = payload => {\n  return {\n    type: actions.CREATE_ONE_POST,\n    payload\n  };\n};\nexport const updateOnePost = payload => {\n  return {\n    type: actions.UPDATE_ONE_POST,\n    payload\n  };\n};\nexport const deleteOnePost = payload => {\n  return {\n    type: actions.DELETE_ONE_POST,\n    payload\n  };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actions.GET_CURRENT_USER:\n      return { ...state,\n        user: action.payload\n      };\n\n    case actions.GET_ALL_POST:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case actions.CREATE_ONE_POST:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case actions.UPDATE_ONE_POST:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id === action.payload._id) {\n            return action.payload;\n          } else {\n            return post;\n          }\n        })\n      };\n\n    case actions.DELETE_ONE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["E:/Workspace/mongodb_expressjs_reactjs_nodejs/frontend/src/reducer/reducer.js"],"names":["actions","initialState","user","posts","getCurrentUser","payload","type","GET_CURRENT_USER","getAllPost","GET_ALL_POST","createOnePost","CREATE_ONE_POST","updateOnePost","UPDATE_ONE_POST","deleteOnePost","DELETE_ONE_POST","reducer","state","action","map","post","_id","filter"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE,IADkB;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAGC,OAAO,IAAI;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEN,OAAO,CAACO,gBADX;AAEHF,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,UAAU,GAAGH,OAAO,IAAI;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEN,OAAO,CAACS,YADX;AAEHJ,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMK,aAAa,GAAGL,OAAO,IAAI;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEN,OAAO,CAACW,eADX;AAEHN,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMO,aAAa,GAAGP,OAAO,IAAI;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEN,OAAO,CAACa,eADX;AAEHR,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMS,aAAa,GAAGT,OAAO,IAAI;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEN,OAAO,CAACe,eADX;AAEHV,IAAAA;AAFG,GAAP;AAIH,CALM;;AAOP,MAAMW,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACZ,IAAf;AACI,SAAKN,OAAO,CAACO,gBAAb;AACI,aAAO,EACH,GAAGU,KADA;AAEHf,QAAAA,IAAI,EAAEgB,MAAM,CAACb;AAFV,OAAP;;AAIJ,SAAKL,OAAO,CAACS,YAAb;AACI,aAAO,EACH,GAAGQ,KADA;AAEHd,QAAAA,KAAK,EAAEe,MAAM,CAACb;AAFX,OAAP;;AAIJ,SAAKL,OAAO,CAACW,eAAb;AACI,aAAO,EACH,GAAGM,KADA;AAEHd,QAAAA,KAAK,EAAE,CAAC,GAAGc,KAAK,CAACd,KAAV,EAAiBe,MAAM,CAACb,OAAxB;AAFJ,OAAP;;AAIJ,SAAKL,OAAO,CAACa,eAAb;AACI,aAAO,EACH,GAAGI,KADA;AAEHd,QAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYgB,GAAZ,CAAgBC,IAAI,IAAI;AAC3B,cAAIA,IAAI,CAACC,GAAL,KAAaH,MAAM,CAACb,OAAP,CAAegB,GAAhC,EAAqC;AACjC,mBAAOH,MAAM,CAACb,OAAd;AACH,WAFD,MAEO;AACH,mBAAOe,IAAP;AACH;AACJ,SANM;AAFJ,OAAP;;AAUJ,SAAKpB,OAAO,CAACe,eAAb;AACI,aAAO,EACH,GAAGE,KADA;AAEHd,QAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYmB,MAAZ,CAAmBF,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,MAAM,CAACb,OAA/C;AAFJ,OAAP;;AAIJ;AACI,aAAOY,KAAP;AAjCR;AAmCH,CApCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import {actions} from '../exportStore';\r\n\r\nexport const initialState = {\r\n    user: null,\r\n    posts: []\r\n}\r\n\r\nexport const getCurrentUser = payload => {\r\n    return {\r\n        type: actions.GET_CURRENT_USER,\r\n        payload\r\n    }\r\n}\r\nexport const getAllPost = payload => {\r\n    return {\r\n        type: actions.GET_ALL_POST,\r\n        payload\r\n    }\r\n}\r\nexport const createOnePost = payload => {\r\n    return {\r\n        type: actions.CREATE_ONE_POST,\r\n        payload\r\n    }\r\n}\r\nexport const updateOnePost = payload => {\r\n    return {\r\n        type: actions.UPDATE_ONE_POST,\r\n        payload\r\n    }\r\n}\r\nexport const deleteOnePost = payload => {\r\n    return {\r\n        type: actions.DELETE_ONE_POST,\r\n        payload\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case actions.GET_CURRENT_USER: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case actions.GET_ALL_POST:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case actions.CREATE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, action.payload]\r\n            }\r\n        case actions.UPDATE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => {\r\n                    if (post._id === action.payload._id) {\r\n                        return action.payload;\r\n                    } else {\r\n                        return post;\r\n                    }\r\n                })\r\n            }\r\n        case actions.DELETE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}