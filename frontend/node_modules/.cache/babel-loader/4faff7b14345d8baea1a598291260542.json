{"ast":null,"code":"import _toConsumableArray from\"E:\\\\Workspace\\\\mongodb_expressjs_reactjs_nodejs\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"E:\\\\Workspace\\\\mongodb_expressjs_reactjs_nodejs\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{actions}from'../exportStore';export var initialState={user:null,posts:[]};export var getCurrentUser=function getCurrentUser(payload){return{type:actions.GET_CURRENT_USER,payload:payload};};export var getAllPost=function getAllPost(payload){return{type:actions.GET_ALL_POST,payload:payload};};export var createOnePost=function createOnePost(payload){return{type:actions.CREATE_ONE_POST,payload:payload};};export var updateOnePost=function updateOnePost(payload){return{type:actions.UPDATE_ONE_POST,payload:payload};};export var deleteOnePost=function deleteOnePost(payload){return{type:actions.DELETE_ONE_POST,payload:payload};};var reducer=function reducer(state,action){switch(action.type){case actions.GET_CURRENT_USER:return _objectSpread(_objectSpread({},state),{},{user:action.payload});case actions.GET_ALL_POST:return _objectSpread(_objectSpread({},state),{},{posts:action.payload});case actions.CREATE_ONE_POST:return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[action.payload])});case actions.UPDATE_ONE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){if(post._id===action.payload._id){return action.payload;}else{return post;}})});case actions.DELETE_ONE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==action.payload;})});default:return state;}};export default reducer;","map":{"version":3,"sources":["E:/Workspace/mongodb_expressjs_reactjs_nodejs/frontend/src/reducer/reducer.js"],"names":["actions","initialState","user","posts","getCurrentUser","payload","type","GET_CURRENT_USER","getAllPost","GET_ALL_POST","createOnePost","CREATE_ONE_POST","updateOnePost","UPDATE_ONE_POST","deleteOnePost","DELETE_ONE_POST","reducer","state","action","map","post","_id","filter"],"mappings":"iTAAA,OAAQA,OAAR,KAAsB,gBAAtB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CACxBC,IAAI,CAAE,IADkB,CAExBC,KAAK,CAAE,EAFiB,CAArB,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,OAAO,CAAI,CACrC,MAAO,CACHC,IAAI,CAAEN,OAAO,CAACO,gBADX,CAEHF,OAAO,CAAPA,OAFG,CAAP,CAIH,CALM,CAMP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAH,OAAO,CAAI,CACjC,MAAO,CACHC,IAAI,CAAEN,OAAO,CAACS,YADX,CAEHJ,OAAO,CAAPA,OAFG,CAAP,CAIH,CALM,CAMP,MAAO,IAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAL,OAAO,CAAI,CACpC,MAAO,CACHC,IAAI,CAAEN,OAAO,CAACW,eADX,CAEHN,OAAO,CAAPA,OAFG,CAAP,CAIH,CALM,CAMP,MAAO,IAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAP,OAAO,CAAI,CACpC,MAAO,CACHC,IAAI,CAAEN,OAAO,CAACa,eADX,CAEHR,OAAO,CAAPA,OAFG,CAAP,CAIH,CALM,CAMP,MAAO,IAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAT,OAAO,CAAI,CACpC,MAAO,CACHC,IAAI,CAAEN,OAAO,CAACe,eADX,CAEHV,OAAO,CAAPA,OAFG,CAAP,CAIH,CALM,CAOP,GAAMW,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/B,OAAQA,MAAM,CAACZ,IAAf,EACI,IAAKN,CAAAA,OAAO,CAACO,gBAAb,CACI,sCACOU,KADP,MAEIf,IAAI,CAAEgB,MAAM,CAACb,OAFjB,GAIJ,IAAKL,CAAAA,OAAO,CAACS,YAAb,CACI,sCACOQ,KADP,MAEId,KAAK,CAAEe,MAAM,CAACb,OAFlB,GAIJ,IAAKL,CAAAA,OAAO,CAACW,eAAb,CACI,sCACOM,KADP,MAEId,KAAK,8BAAMc,KAAK,CAACd,KAAZ,GAAmBe,MAAM,CAACb,OAA1B,EAFT,GAIJ,IAAKL,CAAAA,OAAO,CAACa,eAAb,CACI,sCACOI,KADP,MAEId,KAAK,CAAEc,KAAK,CAACd,KAAN,CAAYgB,GAAZ,CAAgB,SAAAC,IAAI,CAAI,CAC3B,GAAIA,IAAI,CAACC,GAAL,GAAaH,MAAM,CAACb,OAAP,CAAegB,GAAhC,CAAqC,CACjC,MAAOH,CAAAA,MAAM,CAACb,OAAd,CACH,CAFD,IAEO,CACH,MAAOe,CAAAA,IAAP,CACH,CACJ,CANM,CAFX,GAUJ,IAAKpB,CAAAA,OAAO,CAACe,eAAb,CACI,sCACOE,KADP,MAEId,KAAK,CAAEc,KAAK,CAACd,KAAN,CAAYmB,MAAZ,CAAmB,SAAAF,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaH,MAAM,CAACb,OAAxB,EAAvB,CAFX,GAIJ,QACI,MAAOY,CAAAA,KAAP,CAjCR,CAmCH,CApCD,CAqCA,cAAeD,CAAAA,OAAf","sourcesContent":["import {actions} from '../exportStore';\r\n\r\nexport const initialState = {\r\n    user: null,\r\n    posts: []\r\n}\r\n\r\nexport const getCurrentUser = payload => {\r\n    return {\r\n        type: actions.GET_CURRENT_USER,\r\n        payload\r\n    }\r\n}\r\nexport const getAllPost = payload => {\r\n    return {\r\n        type: actions.GET_ALL_POST,\r\n        payload\r\n    }\r\n}\r\nexport const createOnePost = payload => {\r\n    return {\r\n        type: actions.CREATE_ONE_POST,\r\n        payload\r\n    }\r\n}\r\nexport const updateOnePost = payload => {\r\n    return {\r\n        type: actions.UPDATE_ONE_POST,\r\n        payload\r\n    }\r\n}\r\nexport const deleteOnePost = payload => {\r\n    return {\r\n        type: actions.DELETE_ONE_POST,\r\n        payload\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case actions.GET_CURRENT_USER: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case actions.GET_ALL_POST:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case actions.CREATE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, action.payload]\r\n            }\r\n        case actions.UPDATE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => {\r\n                    if (post._id === action.payload._id) {\r\n                        return action.payload;\r\n                    } else {\r\n                        return post;\r\n                    }\r\n                })\r\n            }\r\n        case actions.DELETE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}