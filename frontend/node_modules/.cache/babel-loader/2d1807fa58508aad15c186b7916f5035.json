{"ast":null,"code":"import { CURRENT_USER, GET_ALL_POSTS, CREATE_ONE_POST, UPDATE_ONE_POST, DELETE_ONE_POST } from \"../actions/actions\"; //actions payloads\n\nexport const currentUser = payload => ({\n  type: CURRENT_USER,\n  payload\n});\nexport const getAllPost = payload => ({\n  type: GET_ALL_POSTS,\n  payload\n});\nexport const createOnePost = payload => ({\n  type: CREATE_ONE_POST,\n  payload\n});\nexport const updateOnePost = payload => ({\n  type: UPDATE_ONE_POST,\n  payload\n});\nexport const deleteOnePost = payload => ({\n  type: DELETE_ONE_POST,\n  payload\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CURRENT_USER:\n      return { ...state,\n        user: action.payload\n      };\n\n    case GET_ALL_POSTS:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case CREATE_ONE_POST:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE_ONE_POST:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id === action.payload._id) {\n            return { ...post,\n              ...action.payload\n            };\n          }\n\n          return post;\n        })\n      };\n\n    case DELETE_ONE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["E:/Workspace/mongodb_expressjs_reactjs_nodejs/frontend/src/Reducer/AppReducer.js"],"names":["CURRENT_USER","GET_ALL_POSTS","CREATE_ONE_POST","UPDATE_ONE_POST","DELETE_ONE_POST","currentUser","payload","type","getAllPost","createOnePost","updateOnePost","deleteOnePost","reducer","state","action","user","posts","map","post","_id","filter"],"mappings":"AAAA,SACIA,YADJ,EAEIC,aAFJ,EAGIC,eAHJ,EAIIC,eAJJ,EAKIC,eALJ,QAMK,oBANL,C,CAQA;;AACA,OAAO,MAAMC,WAAW,GAAGC,OAAO,KAAK;AACnCC,EAAAA,IAAI,EAAEP,YAD6B;AACfM,EAAAA;AADe,CAAL,CAA3B;AAGP,OAAO,MAAME,UAAU,GAAGF,OAAO,KAAK;AAClCC,EAAAA,IAAI,EAAEN,aAD4B;AACbK,EAAAA;AADa,CAAL,CAA1B;AAGP,OAAO,MAAMG,aAAa,GAAGH,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEL,eAD+B;AACdI,EAAAA;AADc,CAAL,CAA7B;AAGP,OAAO,MAAMI,aAAa,GAAGJ,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEJ,eAD+B;AACdG,EAAAA;AADc,CAAL,CAA7B;AAGP,OAAO,MAAMK,aAAa,GAAGL,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEH,eAD+B;AACdE,EAAAA;AADc,CAAL,CAA7B;;AAIP,MAAMM,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC9B,UAAOA,MAAM,CAACP,IAAd;AACI,SAAKP,YAAL;AACI,aAAO,EAAC,GAAGa,KAAJ;AAAWE,QAAAA,IAAI,EAAED,MAAM,CAACR;AAAxB,OAAP;;AACJ,SAAKL,aAAL;AACI,aAAO,EAAC,GAAGY,KAAJ;AAAWG,QAAAA,KAAK,EAAEF,MAAM,CAACR;AAAzB,OAAP;;AACJ,SAAKJ,eAAL;AACI,aAAO,EAAC,GAAGW,KAAJ;AAAWG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACR,OAAxB;AAAlB,OAAP;;AACJ,SAAKH,eAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAI;AAC3B,cAAGA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACR,OAAP,CAAea,GAA/B,EAAmC;AAC/B,mBAAO,EAAC,GAAGD,IAAJ;AAAU,iBAAGJ,MAAM,CAACR;AAApB,aAAP;AACH;;AACD,iBAAOY,IAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKd,eAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYI,MAAZ,CAAmBF,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACR,OAA/C;AAFJ,OAAP;;AAIJ;AACI,aAAOO,KAAP;AAvBR;AAyBH,CA1BD;;AA2BA,eAAeD,OAAf","sourcesContent":["import { \r\n    CURRENT_USER, \r\n    GET_ALL_POSTS, \r\n    CREATE_ONE_POST, \r\n    UPDATE_ONE_POST, \r\n    DELETE_ONE_POST } \r\nfrom \"../actions/actions\";\r\n\r\n//actions payloads\r\nexport const currentUser = payload => ({\r\n    type: CURRENT_USER, payload\r\n});\r\nexport const getAllPost = payload => ({\r\n    type: GET_ALL_POSTS, payload\r\n});\r\nexport const createOnePost = payload => ({\r\n    type: CREATE_ONE_POST, payload\r\n})\r\nexport const updateOnePost = payload => ({\r\n    type: UPDATE_ONE_POST, payload\r\n})\r\nexport const deleteOnePost = payload => ({\r\n    type: DELETE_ONE_POST, payload\r\n});\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type){\r\n        case CURRENT_USER:\r\n            return {...state, user: action.payload};\r\n        case GET_ALL_POSTS:\r\n            return {...state, posts: action.payload};\r\n        case CREATE_ONE_POST:\r\n            return {...state, posts: [...state.posts, action.payload]}\r\n        case UPDATE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => {\r\n                    if(post._id === action.payload._id){\r\n                        return {...post, ...action.payload};\r\n                    }\r\n                    return post;\r\n                })\r\n            }\r\n        case DELETE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}