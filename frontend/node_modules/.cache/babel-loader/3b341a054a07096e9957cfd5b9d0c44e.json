{"ast":null,"code":"import { actions } from '../exportStore';\nexport const initialState = {\n  user: null,\n  posts: []\n}; //actions payloads\n\nexport const currentUser = payload => ({\n  type: actions.CURRENT_USER,\n  payload\n});\nexport const getAllPost = payload => ({\n  type: actions.GET_ALL_POSTS,\n  payload\n});\nexport const createOnePost = payload => ({\n  type: actions.CREATE_ONE_POST,\n  payload\n});\nexport const updateOnePost = payload => ({\n  type: actions.UPDATE_ONE_POST,\n  payload\n});\nexport const deleteOnePost = payload => ({\n  type: actions.DELETE_ONE_POST,\n  payload\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actions.CURRENT_USER:\n      return { ...state,\n        user: action.payload\n      };\n\n    case actions.GET_ALL_POSTS:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case actions.CREATE_ONE_POST:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case actions.UPDATE_ONE_POST:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id === action.payload._id) {\n            return { ...post,\n              ...action.payload\n            };\n          }\n\n          return post;\n        })\n      };\n\n    case actions.DELETE_ONE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["E:/Workspace/mongodb_expressjs_reactjs_nodejs/frontend/src/Reducer/AppReducer.js"],"names":["actions","initialState","user","posts","currentUser","payload","type","CURRENT_USER","getAllPost","GET_ALL_POSTS","createOnePost","CREATE_ONE_POST","updateOnePost","UPDATE_ONE_POST","deleteOnePost","DELETE_ONE_POST","reducer","state","action","map","post","_id","filter"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE,IADkB;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,WAAW,GAAGC,OAAO,KAAK;AACnCC,EAAAA,IAAI,EAAEN,OAAO,CAACO,YADqB;AACPF,EAAAA;AADO,CAAL,CAA3B;AAGP,OAAO,MAAMG,UAAU,GAAGH,OAAO,KAAK;AAClCC,EAAAA,IAAI,EAAEN,OAAO,CAACS,aADoB;AACLJ,EAAAA;AADK,CAAL,CAA1B;AAGP,OAAO,MAAMK,aAAa,GAAGL,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEN,OAAO,CAACW,eADuB;AACNN,EAAAA;AADM,CAAL,CAA7B;AAGP,OAAO,MAAMO,aAAa,GAAGP,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEN,OAAO,CAACa,eADuB;AACNR,EAAAA;AADM,CAAL,CAA7B;AAGP,OAAO,MAAMS,aAAa,GAAGT,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEN,OAAO,CAACe,eADuB;AACNV,EAAAA;AADM,CAAL,CAA7B;;AAIP,MAAMW,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC9B,UAAOA,MAAM,CAACZ,IAAd;AACI,SAAKN,OAAO,CAACO,YAAb;AACI,aAAO,EAAC,GAAGU,KAAJ;AAAWf,QAAAA,IAAI,EAAEgB,MAAM,CAACb;AAAxB,OAAP;;AACJ,SAAKL,OAAO,CAACS,aAAb;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWd,QAAAA,KAAK,EAAEe,MAAM,CAACb;AAAzB,OAAP;;AACJ,SAAKL,OAAO,CAACW,eAAb;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWd,QAAAA,KAAK,EAAE,CAAC,GAAGc,KAAK,CAACd,KAAV,EAAiBe,MAAM,CAACb,OAAxB;AAAlB,OAAP;;AACJ,SAAKL,OAAO,CAACa,eAAb;AACI,aAAO,EACH,GAAGI,KADA;AAEHd,QAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYgB,GAAZ,CAAgBC,IAAI,IAAI;AAC3B,cAAGA,IAAI,CAACC,GAAL,KAAaH,MAAM,CAACb,OAAP,CAAegB,GAA/B,EAAmC;AAC/B,mBAAO,EAAC,GAAGD,IAAJ;AAAU,iBAAGF,MAAM,CAACb;AAApB,aAAP;AACH;;AACD,iBAAOe,IAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKpB,OAAO,CAACe,eAAb;AACI,aAAO,EACH,GAAGE,KADA;AAEHd,QAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYmB,MAAZ,CAAmBF,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,MAAM,CAACb,OAA/C;AAFJ,OAAP;;AAIJ;AACI,aAAOY,KAAP;AAvBR;AAyBH,CA1BD;;AA2BA,eAAeD,OAAf","sourcesContent":["import {actions} from '../exportStore';\r\n\r\nexport const initialState = {\r\n    user: null,\r\n    posts: []\r\n}\r\n\r\n//actions payloads\r\nexport const currentUser = payload => ({\r\n    type: actions.CURRENT_USER, payload\r\n});\r\nexport const getAllPost = payload => ({\r\n    type: actions.GET_ALL_POSTS, payload\r\n});\r\nexport const createOnePost = payload => ({\r\n    type: actions.CREATE_ONE_POST, payload\r\n})\r\nexport const updateOnePost = payload => ({\r\n    type: actions.UPDATE_ONE_POST, payload\r\n})\r\nexport const deleteOnePost = payload => ({\r\n    type: actions.DELETE_ONE_POST, payload\r\n});\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type){\r\n        case actions.CURRENT_USER:\r\n            return {...state, user: action.payload};\r\n        case actions.GET_ALL_POSTS:\r\n            return {...state, posts: action.payload};\r\n        case actions.CREATE_ONE_POST:\r\n            return {...state, posts: [...state.posts, action.payload]}\r\n        case actions.UPDATE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => {\r\n                    if(post._id === action.payload._id){\r\n                        return {...post, ...action.payload};\r\n                    }\r\n                    return post;\r\n                })\r\n            }\r\n        case actions.DELETE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}