{"ast":null,"code":"import _toConsumableArray from\"E:\\\\Workspace\\\\mongodb_expressjs_reactjs_nodejs\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"E:\\\\Workspace\\\\mongodb_expressjs_reactjs_nodejs\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{actions}from'../exportStore';export var initialState={user:null,posts:[]};//actions payloads\nexport var currentUser=function currentUser(payload){return{type:actions.CURRENT_USER,payload:payload};};export var getAllPost=function getAllPost(payload){return{type:actions.GET_ALL_POSTS,payload:payload};};export var createOnePost=function createOnePost(payload){return{type:actions.CREATE_ONE_POST,payload:payload};};export var updateOnePost=function updateOnePost(payload){return{type:actions.UPDATE_ONE_POST,payload:payload};};export var deleteOnePost=function deleteOnePost(payload){return{type:actions.DELETE_ONE_POST,payload:payload};};var reducer=function reducer(state,action){switch(action.type){case actions.CURRENT_USER:return _objectSpread(_objectSpread({},state),{},{user:action.payload});case actions.GET_ALL_POSTS:return _objectSpread(_objectSpread({},state),{},{posts:action.payload});case actions.CREATE_ONE_POST:return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[action.payload])});case actions.UPDATE_ONE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){if(post._id===action.payload._id){return _objectSpread(_objectSpread({},post),action.payload);}return post;})});case actions.DELETE_ONE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==action.payload;})});default:return state;}};export default reducer;","map":{"version":3,"sources":["E:/Workspace/mongodb_expressjs_reactjs_nodejs/frontend/src/Reducer/AppReducer.js"],"names":["actions","initialState","user","posts","currentUser","payload","type","CURRENT_USER","getAllPost","GET_ALL_POSTS","createOnePost","CREATE_ONE_POST","updateOnePost","UPDATE_ONE_POST","deleteOnePost","DELETE_ONE_POST","reducer","state","action","map","post","_id","filter"],"mappings":"iTAAA,OAAQA,OAAR,KAAsB,gBAAtB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CACxBC,IAAI,CAAE,IADkB,CAExBC,KAAK,CAAE,EAFiB,CAArB,CAKP;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,OAAO,QAAK,CACnCC,IAAI,CAAEN,OAAO,CAACO,YADqB,CACPF,OAAO,CAAPA,OADO,CAAL,EAA3B,CAGP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAH,OAAO,QAAK,CAClCC,IAAI,CAAEN,OAAO,CAACS,aADoB,CACLJ,OAAO,CAAPA,OADK,CAAL,EAA1B,CAGP,MAAO,IAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAL,OAAO,QAAK,CACrCC,IAAI,CAAEN,OAAO,CAACW,eADuB,CACNN,OAAO,CAAPA,OADM,CAAL,EAA7B,CAGP,MAAO,IAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAP,OAAO,QAAK,CACrCC,IAAI,CAAEN,OAAO,CAACa,eADuB,CACNR,OAAO,CAAPA,OADM,CAAL,EAA7B,CAGP,MAAO,IAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAT,OAAO,QAAK,CACrCC,IAAI,CAAEN,OAAO,CAACe,eADuB,CACNV,OAAO,CAAPA,OADM,CAAL,EAA7B,CAIP,GAAMW,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAOC,MAAP,CAAkB,CAC9B,OAAOA,MAAM,CAACZ,IAAd,EACI,IAAKN,CAAAA,OAAO,CAACO,YAAb,CACI,sCAAWU,KAAX,MAAkBf,IAAI,CAAEgB,MAAM,CAACb,OAA/B,GACJ,IAAKL,CAAAA,OAAO,CAACS,aAAb,CACI,sCAAWQ,KAAX,MAAkBd,KAAK,CAAEe,MAAM,CAACb,OAAhC,GACJ,IAAKL,CAAAA,OAAO,CAACW,eAAb,CACI,sCAAWM,KAAX,MAAkBd,KAAK,8BAAMc,KAAK,CAACd,KAAZ,GAAmBe,MAAM,CAACb,OAA1B,EAAvB,GACJ,IAAKL,CAAAA,OAAO,CAACa,eAAb,CACI,sCACOI,KADP,MAEId,KAAK,CAAEc,KAAK,CAACd,KAAN,CAAYgB,GAAZ,CAAgB,SAAAC,IAAI,CAAI,CAC3B,GAAGA,IAAI,CAACC,GAAL,GAAaH,MAAM,CAACb,OAAP,CAAegB,GAA/B,CAAmC,CAC/B,sCAAWD,IAAX,EAAoBF,MAAM,CAACb,OAA3B,EACH,CACD,MAAOe,CAAAA,IAAP,CACH,CALM,CAFX,GASJ,IAAKpB,CAAAA,OAAO,CAACe,eAAb,CACI,sCACOE,KADP,MAEId,KAAK,CAAEc,KAAK,CAACd,KAAN,CAAYmB,MAAZ,CAAmB,SAAAF,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaH,MAAM,CAACb,OAAxB,EAAvB,CAFX,GAIJ,QACI,MAAOY,CAAAA,KAAP,CAvBR,CAyBH,CA1BD,CA2BA,cAAeD,CAAAA,OAAf","sourcesContent":["import {actions} from '../exportStore';\r\n\r\nexport const initialState = {\r\n    user: null,\r\n    posts: []\r\n}\r\n\r\n//actions payloads\r\nexport const currentUser = payload => ({\r\n    type: actions.CURRENT_USER, payload\r\n});\r\nexport const getAllPost = payload => ({\r\n    type: actions.GET_ALL_POSTS, payload\r\n});\r\nexport const createOnePost = payload => ({\r\n    type: actions.CREATE_ONE_POST, payload\r\n})\r\nexport const updateOnePost = payload => ({\r\n    type: actions.UPDATE_ONE_POST, payload\r\n})\r\nexport const deleteOnePost = payload => ({\r\n    type: actions.DELETE_ONE_POST, payload\r\n});\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type){\r\n        case actions.CURRENT_USER:\r\n            return {...state, user: action.payload};\r\n        case actions.GET_ALL_POSTS:\r\n            return {...state, posts: action.payload};\r\n        case actions.CREATE_ONE_POST:\r\n            return {...state, posts: [...state.posts, action.payload]}\r\n        case actions.UPDATE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => {\r\n                    if(post._id === action.payload._id){\r\n                        return {...post, ...action.payload};\r\n                    }\r\n                    return post;\r\n                })\r\n            }\r\n        case actions.DELETE_ONE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}